module &_tmp_cloc3172_BlackScholes_Kernels_opt_bc:1:0:$full:$large:$default;
extension "amd:gcn";
extension "IMAGE";

decl prog function &abort()();

prog kernel &__OpenCL_blackScholes_kernel(
	kernarg_u64 %__global_offset_0,
	kernarg_u64 %__global_offset_1,
	kernarg_u64 %__global_offset_2,
	kernarg_u64 %__printf_buffer,
	kernarg_u64 %__vqueue_pointer,
	kernarg_u64 %__aqlwrap_pointer,
	kernarg_u64 %randArray,
	kernarg_u64 %width,
	kernarg_u64 %call,
	kernarg_u64 %put)
{
	pragma "AMD RTI", "ARGSTART:__OpenCL_blackScholes_kernel";
	pragma "AMD RTI", "version:3:1:104";
	pragma "AMD RTI", "device:generic";
	pragma "AMD RTI", "uniqueid:1025";
	pragma "AMD RTI", "memory:private:0";
	pragma "AMD RTI", "memory:region:0";
	pragma "AMD RTI", "memory:local:0";
	pragma "AMD RTI", "value:__global_offset_0:u64:1:1:0";
	pragma "AMD RTI", "value:__global_offset_1:u64:1:1:16";
	pragma "AMD RTI", "value:__global_offset_2:u64:1:1:32";
	pragma "AMD RTI", "pointer:__printf_buffer:u8:1:1:48:uav:7:1:RW:0:0:0";
	pragma "AMD RTI", "value:__vqueue_pointer:u64:1:1:64";
	pragma "AMD RTI", "value:__aqlwrap_pointer:u64:1:1:80";
	pragma "AMD RTI", "pointer:randArray:float:1:1:96:uav:7:16:RW:0:0:0";
	pragma "AMD RTI", "constarg:6:randArray";
	pragma "AMD RTI", "value:width:u32:1:1:112";
	pragma "AMD RTI", "pointer:call:float:1:1:128:uav:7:16:RW:0:0:0";
	pragma "AMD RTI", "pointer:put:float:1:1:144:uav:7:16:RW:0:0:0";
	pragma "AMD RTI", "function:1:0";
	pragma "AMD RTI", "memory:64bitABI";
	pragma "AMD RTI", "privateid:8";
	pragma "AMD RTI", "enqueue_kernel:0";
	pragma "AMD RTI", "kernel_index:0";
	pragma "AMD RTI", "reflection:0:size_t";
	pragma "AMD RTI", "reflection:1:size_t";
	pragma "AMD RTI", "reflection:2:size_t";
	pragma "AMD RTI", "reflection:3:size_t";
	pragma "AMD RTI", "reflection:4:size_t";
	pragma "AMD RTI", "reflection:5:size_t";
	pragma "AMD RTI", "reflection:6:float4*";
	pragma "AMD RTI", "reflection:7:int";
	pragma "AMD RTI", "reflection:8:float4*";
	pragma "AMD RTI", "reflection:9:float4*";
	pragma "AMD RTI", "ARGEND:__OpenCL_blackScholes_kernel";

@__OpenCL_blackScholes_kernel_entry:
	// BB#0:
	workitemabsid_u32	$s0, 0;
	cvt_u64_u32	$d0, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d1, [%__global_offset_0];
	add_u64	$d0, $d0, $d1;
	workitemabsid_u32	$s0, 1;
	cvt_u64_u32	$d1, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d2, [%__global_offset_1];
	add_u64	$d1, $d1, $d2;
	ld_kernarg_align(4)_width(all)_u32	$s0, [%width];
	cvt_s64_s32	$d2, $s0;
	mad_u64	$d0, $d1, $d2, $d0;
	shl_u64	$d0, $d0, 4;
	ld_kernarg_align(8)_width(all)_u64	$d1, [%randArray];
	add_u64	$d1, $d1, $d0;
	ld_v4_global_align(16)_f32	($s2, $s9, $s8, $s12), [$d1];
	mul_ftz_f32	$s0, $s2, 0F41200000;
	sub_ftz_f32	$s1, 0F3f800000, $s2;
	mul_ftz_f32	$s3, $s1, 0F42c80000;
	add_ftz_f32	$s0, $s0, $s3;
	div_ftz_f32	$s3, $s0, $s0;
	nlog2_f32	$s3, $s3;
	mov_b32	$s4, $s3;
	and_b32	$s4, $s4, -4096;
	sub_ftz_f32	$s5, $s3, $s4;
	mul_ftz_f32	$s6, $s5, 0F3805fdf4;
	nfma_f32	$s6, $s4, 0F3805fdf4, $s6;
	nfma_f32	$s5, $s5, 0F3f317000, $s6;
	nfma_f32	$s4, $s4, 0F3f317000, $s5;
	class_b1_f32	$c0, $s3, 0x207;
	cvt_u32_b1	$s5, $c0;
	cmp_ne_b1_s32	$c0, $s5, 0;
	cmov_b32	$s3, $c0, $s3, $s4;
	mul_ftz_f32	$s5, $s2, 0F3c23d70a;
	mul_ftz_f32	$s4, $s1, 0F3dcccccd;
	add_ftz_f32	$s6, $s5, $s4;
	mul_ftz_f32	$s4, $s1, 0F41200000;
	add_ftz_f32	$s4, $s2, $s4;
	nsqrt_f32	$s2, $s4;
	mul_ftz_f32	$s2, $s6, $s2;
	mul_ftz_f32	$s1, $s1, 0F3d4ccccd;
	add_ftz_f32	$s5, $s5, $s1;
	mul_ftz_f32	$s1, $s6, $s6;
	div_ftz_f32	$s1, $s1, 0F40000000;
	add_ftz_f32	$s1, $s5, $s1;
	mul_ftz_f32	$s1, $s1, $s4;
	add_ftz_f32	$s1, $s1, $s3;
	div_ftz_f32	$s7, $s1, $s2;
	sub_ftz_f32	$s10, $s7, $s2;
	cmp_lt_ftz_b1_f32	$c0, $s10, 0F00000000;
	cmov_b32	$s6, $c0, -1, 0;
	mul_ftz_f32	$s1, $s9, 0F41200000;
	sub_ftz_f32	$s11, 0F3f800000, $s9;
	mul_ftz_f32	$s2, $s11, 0F42c80000;
	add_ftz_f32	$s1, $s1, $s2;
	div_ftz_f32	$s2, $s1, $s1;
	nlog2_f32	$s2, $s2;
	mov_b32	$s3, $s2;
	and_b32	$s3, $s3, -4096;
	sub_ftz_f32	$s13, $s2, $s3;
	mul_ftz_f32	$s14, $s13, 0F3805fdf4;
	nfma_f32	$s14, $s3, 0F3805fdf4, $s14;
	nfma_f32	$s13, $s13, 0F3f317000, $s14;
	nfma_f32	$s3, $s3, 0F3f317000, $s13;
	class_b1_f32	$c0, $s2, 0x207;
	cvt_u32_b1	$s13, $c0;
	cmp_ne_b1_s32	$c0, $s13, 0;
	cmov_b32	$s15, $c0, $s2, $s3;
	mul_ftz_f32	$s2, $s8, 0F41200000;
	sub_ftz_f32	$s13, 0F3f800000, $s8;
	mul_ftz_f32	$s3, $s13, 0F42c80000;
	add_ftz_f32	$s2, $s2, $s3;
	div_ftz_f32	$s3, $s2, $s2;
	nlog2_f32	$s3, $s3;
	mov_b32	$s14, $s3;
	and_b32	$s14, $s14, -4096;
	sub_ftz_f32	$s16, $s3, $s14;
	mul_ftz_f32	$s17, $s16, 0F3805fdf4;
	nfma_f32	$s17, $s14, 0F3805fdf4, $s17;
	nfma_f32	$s16, $s16, 0F3f317000, $s17;
	nfma_f32	$s14, $s14, 0F3f317000, $s16;
	class_b1_f32	$c0, $s3, 0x207;
	cvt_u32_b1	$s16, $c0;
	cmp_ne_b1_s32	$c0, $s16, 0;
	cmov_b32	$s22, $c0, $s3, $s14;
	mul_ftz_f32	$s3, $s12, 0F41200000;
	sub_ftz_f32	$s20, 0F3f800000, $s12;
	mul_ftz_f32	$s14, $s20, 0F42c80000;
	add_ftz_f32	$s3, $s3, $s14;
	div_ftz_f32	$s14, $s3, $s3;
	nlog2_f32	$s14, $s14;
	mov_b32	$s16, $s14;
	and_b32	$s16, $s16, -4096;
	sub_ftz_f32	$s17, $s14, $s16;
	mul_ftz_f32	$s18, $s17, 0F3805fdf4;
	nfma_f32	$s18, $s16, 0F3805fdf4, $s18;
	nfma_f32	$s17, $s17, 0F3f317000, $s18;
	nfma_f32	$s16, $s16, 0F3f317000, $s17;
	class_b1_f32	$c0, $s14, 0x207;
	cvt_u32_b1	$s17, $c0;
	cmp_ne_b1_s32	$c0, $s17, 0;
	cmov_b32	$s24, $c0, $s14, $s16;
	neg_f32	$s14, $s10;
	mul_ftz_f32	$s16, $s10, $s14;
	div_ftz_f32	$s16, $s16, 0F40000000;
	mov_b32	$s17, $s16;
	and_b32	$s17, $s17, -4096;
	sub_ftz_f32	$s18, $s16, $s17;
	mul_ftz_f32	$s19, $s18, 0F39a3b295;
	nfma_f32	$s18, $s18, 0F3fb8a000, $s19;
	nfma_f32	$s18, $s17, 0F39a3b295, $s18;
	nexp2_f32	$s18, $s18;
	mul_ftz_f32	$s17, $s17, 0F3fb8a000;
	nexp2_f32	$s17, $s17;
	mul_ftz_f32	$s17, $s18, $s17;
	cmp_lt_ftz_b1_f32	$c0, $s16, 0Fc2aeac50;
	cmov_b32	$s17, $c0, 0, $s17;
	cmp_gt_ftz_b1_f32	$c0, $s16, 0F42b17218;
	cmov_b32	$s16, $c0, 0x7f800000, $s17;
	abs_f32	$s10, $s10;
	mul_ftz_f32	$s10, $s10, 0F3e6d3389;
	add_ftz_f32	$s10, $s10, 0F3f800000;
	div_ftz_f32	$s10, 0F3f800000, $s10;
	mul_ftz_f32	$s17, $s10, 0F3faa466f;
	add_ftz_f32	$s17, $s17, 0Fbfe91eea;
	mul_ftz_f32	$s17, $s10, $s17;
	add_ftz_f32	$s18, $s17, 0F3fe40778;
	mul_ftz_f32	$s17, $s16, 0F3ecc422a;
	mul_ftz_f32	$s18, $s10, $s18;
	mul_ftz_f32	$s16, $s10, $s17;
	add_ftz_f32	$s18, $s18, 0Fbeb68f87;
	mul_ftz_f32	$s10, $s10, $s18;
	add_ftz_f32	$s10, $s10, 0F3ea385fa;
	mul_ftz_f32	$s10, $s16, $s10;
	sub_ftz_f32	$s10, 0F3f800000, $s10;
	sub_ftz_f32	$s16, 0F3f800000, $s10;
	cmp_lt_b1_s32	$c0, $s6, 0;
	cmov_b32	$s6, $c0, $s16, $s10;
	mul_ftz_f32	$s16, $s20, 0F41200000;
	mul_ftz_f32	$s19, $s13, 0F41200000;
	mul_ftz_f32	$s10, $s11, 0F41200000;
	add_ftz_f32	$s10, $s9, $s10;
	mul_ftz_f32	$s18, $s9, 0F3c23d70a;
	add_ftz_f32	$s9, $s8, $s19;
	mul_ftz_f32	$s26, $s8, 0F3c23d70a;
	add_ftz_f32	$s8, $s12, $s16;
	mul_ftz_f32	$s27, $s12, 0F3c23d70a;
	neg_f32	$s16, $s7;
	mul_ftz_f32	$s12, $s7, $s16;
	div_ftz_f32	$s12, $s12, 0F40000000;
	mov_b32	$s19, $s12;
	and_b32	$s19, $s19, -4096;
	sub_ftz_f32	$s21, $s12, $s19;
	mul_ftz_f32	$s23, $s21, 0F39a3b295;
	nfma_f32	$s21, $s21, 0F3fb8a000, $s23;
	nfma_f32	$s21, $s19, 0F39a3b295, $s21;
	nexp2_f32	$s21, $s21;
	mul_ftz_f32	$s19, $s19, 0F3fb8a000;
	nexp2_f32	$s19, $s19;
	mul_ftz_f32	$s19, $s21, $s19;
	cmp_lt_ftz_b1_f32	$c0, $s12, 0Fc2aeac50;
	cmov_b32	$s19, $c0, 0, $s19;
	cmp_gt_ftz_b1_f32	$c0, $s12, 0F42b17218;
	cmov_b32	$s12, $c0, 0x7f800000, $s19;
	abs_f32	$s19, $s7;
	mul_ftz_f32	$s19, $s19, 0F3e6d3389;
	add_ftz_f32	$s19, $s19, 0F3f800000;
	div_ftz_f32	$s21, 0F3f800000, $s19;
	mul_ftz_f32	$s19, $s21, 0F3faa466f;
	add_ftz_f32	$s19, $s19, 0Fbfe91eea;
	mul_ftz_f32	$s19, $s21, $s19;
	add_ftz_f32	$s23, $s19, 0F3fe40778;
	mul_ftz_f32	$s19, $s12, 0F3ecc422a;
	mul_ftz_f32	$s12, $s21, $s23;
	add_ftz_f32	$s12, $s12, 0Fbeb68f87;
	mul_ftz_f32	$s12, $s21, $s12;
	mul_ftz_f32	$s21, $s21, $s19;
	add_ftz_f32	$s12, $s12, 0F3ea385fa;
	mul_ftz_f32	$s12, $s21, $s12;
	cmp_lt_ftz_b1_f32	$c0, $s7, 0F00000000;
	cmov_b32	$s7, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s7, 0;
	sub_ftz_f32	$s7, 0F3f800000, $s12;
	sub_ftz_f32	$s12, 0F3f800000, $s7;
	cmov_b32	$s7, $c0, $s12, $s7;
	mul_ftz_f32	$s12, $s11, 0F3d4ccccd;
	add_ftz_f32	$s12, $s18, $s12;
	mul_ftz_f32	$s11, $s11, 0F3dcccccd;
	add_ftz_f32	$s11, $s18, $s11;
	nsqrt_f32	$s18, $s10;
	mul_ftz_f32	$s23, $s11, $s18;
	mul_ftz_f32	$s11, $s11, $s11;
	div_ftz_f32	$s11, $s11, 0F40000000;
	add_ftz_f32	$s11, $s12, $s11;
	mul_ftz_f32	$s11, $s11, $s10;
	add_ftz_f32	$s11, $s11, $s15;
	div_ftz_f32	$s25, $s11, $s23;
	neg_f32	$s18, $s25;
	mul_ftz_f32	$s11, $s25, $s18;
	div_ftz_f32	$s11, $s11, 0F40000000;
	mov_b32	$s15, $s11;
	and_b32	$s15, $s15, -4096;
	sub_ftz_f32	$s21, $s11, $s15;
	mul_ftz_f32	$s28, $s21, 0F39a3b295;
	nfma_f32	$s21, $s21, 0F3fb8a000, $s28;
	nfma_f32	$s21, $s15, 0F39a3b295, $s21;
	nexp2_f32	$s21, $s21;
	mul_ftz_f32	$s15, $s15, 0F3fb8a000;
	nexp2_f32	$s15, $s15;
	mul_ftz_f32	$s15, $s21, $s15;
	cmp_lt_ftz_b1_f32	$c0, $s11, 0Fc2aeac50;
	cmov_b32	$s15, $c0, 0, $s15;
	cmp_gt_ftz_b1_f32	$c0, $s11, 0F42b17218;
	cmov_b32	$s11, $c0, 0x7f800000, $s15;
	abs_f32	$s15, $s25;
	mul_ftz_f32	$s15, $s15, 0F3e6d3389;
	add_ftz_f32	$s15, $s15, 0F3f800000;
	div_ftz_f32	$s15, 0F3f800000, $s15;
	mul_ftz_f32	$s21, $s15, 0F3faa466f;
	add_ftz_f32	$s21, $s21, 0Fbfe91eea;
	mul_ftz_f32	$s21, $s15, $s21;
	add_ftz_f32	$s28, $s21, 0F3fe40778;
	mul_ftz_f32	$s21, $s11, 0F3ecc422a;
	mul_ftz_f32	$s11, $s15, $s28;
	add_ftz_f32	$s11, $s11, 0Fbeb68f87;
	mul_ftz_f32	$s11, $s15, $s11;
	mul_ftz_f32	$s15, $s15, $s21;
	add_ftz_f32	$s11, $s11, 0F3ea385fa;
	mul_ftz_f32	$s11, $s15, $s11;
	cmp_lt_ftz_b1_f32	$c0, $s25, 0F00000000;
	cmov_b32	$s15, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s15, 0;
	sub_ftz_f32	$s11, 0F3f800000, $s11;
	sub_ftz_f32	$s15, 0F3f800000, $s11;
	cmov_b32	$s11, $c0, $s15, $s11;
	mul_ftz_f32	$s15, $s13, 0F3d4ccccd;
	add_ftz_f32	$s15, $s26, $s15;
	mul_ftz_f32	$s13, $s13, 0F3dcccccd;
	add_ftz_f32	$s13, $s26, $s13;
	nsqrt_f32	$s26, $s9;
	mul_ftz_f32	$s30, $s13, $s26;
	mul_ftz_f32	$s13, $s13, $s13;
	div_ftz_f32	$s13, $s13, 0F40000000;
	add_ftz_f32	$s13, $s15, $s13;
	mul_ftz_f32	$s13, $s13, $s9;
	add_ftz_f32	$s13, $s13, $s22;
	div_ftz_f32	$s32, $s13, $s30;
	neg_f32	$s26, $s32;
	mul_ftz_f32	$s13, $s32, $s26;
	div_ftz_f32	$s13, $s13, 0F40000000;
	mov_b32	$s22, $s13;
	and_b32	$s22, $s22, -4096;
	sub_ftz_f32	$s28, $s13, $s22;
	mul_ftz_f32	$s29, $s28, 0F39a3b295;
	nfma_f32	$s28, $s28, 0F3fb8a000, $s29;
	nfma_f32	$s28, $s22, 0F39a3b295, $s28;
	nexp2_f32	$s28, $s28;
	mul_ftz_f32	$s22, $s22, 0F3fb8a000;
	nexp2_f32	$s22, $s22;
	mul_ftz_f32	$s22, $s28, $s22;
	cmp_lt_ftz_b1_f32	$c0, $s13, 0Fc2aeac50;
	cmov_b32	$s22, $c0, 0, $s22;
	cmp_gt_ftz_b1_f32	$c0, $s13, 0F42b17218;
	cmov_b32	$s13, $c0, 0x7f800000, $s22;
	abs_f32	$s22, $s32;
	mul_ftz_f32	$s22, $s22, 0F3e6d3389;
	add_ftz_f32	$s22, $s22, 0F3f800000;
	div_ftz_f32	$s22, 0F3f800000, $s22;
	mul_ftz_f32	$s28, $s22, 0F3faa466f;
	add_ftz_f32	$s28, $s28, 0Fbfe91eea;
	mul_ftz_f32	$s28, $s22, $s28;
	add_ftz_f32	$s28, $s28, 0F3fe40778;
	mul_ftz_f32	$s29, $s13, 0F3ecc422a;
	mul_ftz_f32	$s13, $s22, $s28;
	add_ftz_f32	$s13, $s13, 0Fbeb68f87;
	mul_ftz_f32	$s13, $s22, $s13;
	mul_ftz_f32	$s22, $s22, $s29;
	add_ftz_f32	$s13, $s13, 0F3ea385fa;
	mul_ftz_f32	$s13, $s22, $s13;
	cmp_lt_ftz_b1_f32	$c0, $s32, 0F00000000;
	cmov_b32	$s22, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s22, 0;
	sub_ftz_f32	$s13, 0F3f800000, $s13;
	sub_ftz_f32	$s22, 0F3f800000, $s13;
	cmov_b32	$s13, $c0, $s22, $s13;
	abs_f32	$s22, $s14;
	mul_ftz_f32	$s22, $s22, 0F3e6d3389;
	add_ftz_f32	$s22, $s22, 0F3f800000;
	div_ftz_f32	$s22, 0F3f800000, $s22;
	mul_ftz_f32	$s28, $s22, 0F3faa466f;
	add_ftz_f32	$s28, $s28, 0Fbfe91eea;
	mul_ftz_f32	$s28, $s22, $s28;
	add_ftz_f32	$s28, $s28, 0F3fe40778;
	mul_ftz_f32	$s17, $s22, $s17;
	mul_ftz_f32	$s28, $s22, $s28;
	add_ftz_f32	$s28, $s28, 0Fbeb68f87;
	mul_ftz_f32	$s22, $s22, $s28;
	add_ftz_f32	$s22, $s22, 0F3ea385fa;
	mul_ftz_f32	$s17, $s17, $s22;
	cmp_lt_ftz_b1_f32	$c0, $s14, 0F00000000;
	cmov_b32	$s14, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s14, 0;
	sub_ftz_f32	$s14, 0F3f800000, $s17;
	sub_ftz_f32	$s17, 0F3f800000, $s14;
	cmov_b32	$s14, $c0, $s17, $s14;
	sub_ftz_f32	$s23, $s25, $s23;
	neg_f32	$s17, $s23;
	mul_ftz_f32	$s22, $s23, $s17;
	div_ftz_f32	$s22, $s22, 0F40000000;
	mov_b32	$s25, $s22;
	and_b32	$s25, $s25, -4096;
	sub_ftz_f32	$s28, $s22, $s25;
	mul_ftz_f32	$s31, $s28, 0F39a3b295;
	nfma_f32	$s28, $s28, 0F3fb8a000, $s31;
	nfma_f32	$s28, $s25, 0F39a3b295, $s28;
	nexp2_f32	$s28, $s28;
	mul_ftz_f32	$s25, $s25, 0F3fb8a000;
	nexp2_f32	$s25, $s25;
	mul_ftz_f32	$s25, $s28, $s25;
	cmp_lt_ftz_b1_f32	$c0, $s22, 0Fc2aeac50;
	cmov_b32	$s25, $c0, 0, $s25;
	cmp_gt_ftz_b1_f32	$c0, $s22, 0F42b17218;
	cmov_b32	$s25, $c0, 0x7f800000, $s25;
	abs_f32	$s22, $s17;
	mul_ftz_f32	$s22, $s22, 0F3e6d3389;
	add_ftz_f32	$s22, $s22, 0F3f800000;
	div_ftz_f32	$s22, 0F3f800000, $s22;
	mul_ftz_f32	$s28, $s22, 0F3faa466f;
	add_ftz_f32	$s28, $s28, 0Fbfe91eea;
	mul_ftz_f32	$s28, $s22, $s28;
	mul_ftz_f32	$s25, $s25, 0F3ecc422a;
	add_ftz_f32	$s28, $s28, 0F3fe40778;
	mul_ftz_f32	$s28, $s22, $s28;
	add_ftz_f32	$s28, $s28, 0Fbeb68f87;
	mul_ftz_f32	$s28, $s22, $s28;
	mul_ftz_f32	$s22, $s22, $s25;
	add_ftz_f32	$s28, $s28, 0F3ea385fa;
	mul_ftz_f32	$s22, $s22, $s28;
	cmp_lt_ftz_b1_f32	$c0, $s17, 0F00000000;
	cmov_b32	$s17, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s17, 0;
	sub_ftz_f32	$s17, 0F3f800000, $s22;
	sub_ftz_f32	$s22, 0F3f800000, $s17;
	cmov_b32	$s17, $c0, $s22, $s17;
	mul_ftz_f32	$s22, $s20, 0F3d4ccccd;
	add_ftz_f32	$s22, $s27, $s22;
	mul_ftz_f32	$s20, $s20, 0F3dcccccd;
	add_ftz_f32	$s27, $s27, $s20;
	nsqrt_f32	$s20, $s8;
	mul_ftz_f32	$s20, $s27, $s20;
	mul_ftz_f32	$s27, $s27, $s27;
	div_ftz_f32	$s27, $s27, 0F40000000;
	add_ftz_f32	$s27, $s22, $s27;
	mul_ftz_f32	$s27, $s27, $s8;
	add_ftz_f32	$s24, $s27, $s24;
	div_ftz_f32	$s28, $s24, $s20;
	sub_ftz_f32	$s31, $s28, $s20;
	neg_f32	$s20, $s31;
	mul_ftz_f32	$s24, $s31, $s20;
	div_ftz_f32	$s24, $s24, 0F40000000;
	mov_b32	$s27, $s24;
	and_b32	$s27, $s27, -4096;
	sub_ftz_f32	$s33, $s24, $s27;
	mul_ftz_f32	$s34, $s33, 0F39a3b295;
	nfma_f32	$s33, $s33, 0F3fb8a000, $s34;
	nfma_f32	$s33, $s27, 0F39a3b295, $s33;
	nexp2_f32	$s33, $s33;
	mul_ftz_f32	$s27, $s27, 0F3fb8a000;
	nexp2_f32	$s27, $s27;
	mul_ftz_f32	$s27, $s33, $s27;
	cmp_lt_ftz_b1_f32	$c0, $s24, 0Fc2aeac50;
	cmov_b32	$s27, $c0, 0, $s27;
	cmp_gt_ftz_b1_f32	$c0, $s24, 0F42b17218;
	cmov_b32	$s27, $c0, 0x7f800000, $s27;
	abs_f32	$s24, $s20;
	mul_ftz_f32	$s24, $s24, 0F3e6d3389;
	add_ftz_f32	$s24, $s24, 0F3f800000;
	div_ftz_f32	$s24, 0F3f800000, $s24;
	mul_ftz_f32	$s33, $s24, 0F3faa466f;
	add_ftz_f32	$s33, $s33, 0Fbfe91eea;
	mul_ftz_f32	$s34, $s24, $s33;
	mul_ftz_f32	$s33, $s27, 0F3ecc422a;
	add_ftz_f32	$s27, $s34, 0F3fe40778;
	mul_ftz_f32	$s27, $s24, $s27;
	add_ftz_f32	$s27, $s27, 0Fbeb68f87;
	mul_ftz_f32	$s27, $s24, $s27;
	mul_ftz_f32	$s24, $s24, $s33;
	add_ftz_f32	$s27, $s27, 0F3ea385fa;
	mul_ftz_f32	$s24, $s24, $s27;
	cmp_lt_ftz_b1_f32	$c0, $s20, 0F00000000;
	cmov_b32	$s20, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s20, 0;
	sub_ftz_f32	$s20, 0F3f800000, $s24;
	sub_ftz_f32	$s24, 0F3f800000, $s20;
	cmov_b32	$s20, $c0, $s24, $s20;
	neg_f32	$s24, $s28;
	mul_ftz_f32	$s27, $s28, $s24;
	div_ftz_f32	$s27, $s27, 0F40000000;
	mov_b32	$s34, $s27;
	and_b32	$s34, $s34, -4096;
	sub_ftz_f32	$s35, $s27, $s34;
	mul_ftz_f32	$s36, $s35, 0F39a3b295;
	nfma_f32	$s35, $s35, 0F3fb8a000, $s36;
	nfma_f32	$s35, $s34, 0F39a3b295, $s35;
	nexp2_f32	$s35, $s35;
	mul_ftz_f32	$s34, $s34, 0F3fb8a000;
	nexp2_f32	$s34, $s34;
	mul_ftz_f32	$s34, $s35, $s34;
	cmp_lt_ftz_b1_f32	$c0, $s27, 0Fc2aeac50;
	cmov_b32	$s34, $c0, 0, $s34;
	cmp_gt_ftz_b1_f32	$c0, $s27, 0F42b17218;
	cmov_b32	$s34, $c0, 0x7f800000, $s34;
	abs_f32	$s27, $s24;
	mul_ftz_f32	$s27, $s27, 0F3e6d3389;
	add_ftz_f32	$s27, $s27, 0F3f800000;
	div_ftz_f32	$s27, 0F3f800000, $s27;
	mul_ftz_f32	$s35, $s27, 0F3faa466f;
	add_ftz_f32	$s35, $s35, 0Fbfe91eea;
	mul_ftz_f32	$s35, $s27, $s35;
	mul_ftz_f32	$s34, $s34, 0F3ecc422a;
	add_ftz_f32	$s35, $s35, 0F3fe40778;
	mul_ftz_f32	$s35, $s27, $s35;
	add_ftz_f32	$s35, $s35, 0Fbeb68f87;
	mul_ftz_f32	$s35, $s27, $s35;
	mul_ftz_f32	$s27, $s27, $s34;
	add_ftz_f32	$s35, $s35, 0F3ea385fa;
	mul_ftz_f32	$s27, $s27, $s35;
	cmp_lt_ftz_b1_f32	$c0, $s24, 0F00000000;
	cmov_b32	$s24, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s24, 0;
	sub_ftz_f32	$s24, 0F3f800000, $s27;
	sub_ftz_f32	$s27, 0F3f800000, $s24;
	cmov_b32	$s24, $c0, $s27, $s24;
	sub_ftz_f32	$s30, $s32, $s30;
	neg_f32	$s27, $s30;
	mul_ftz_f32	$s32, $s30, $s27;
	div_ftz_f32	$s32, $s32, 0F40000000;
	mov_b32	$s35, $s32;
	and_b32	$s35, $s35, -4096;
	sub_ftz_f32	$s36, $s32, $s35;
	mul_ftz_f32	$s37, $s36, 0F39a3b295;
	nfma_f32	$s36, $s36, 0F3fb8a000, $s37;
	nfma_f32	$s36, $s35, 0F39a3b295, $s36;
	nexp2_f32	$s36, $s36;
	mul_ftz_f32	$s35, $s35, 0F3fb8a000;
	nexp2_f32	$s35, $s35;
	mul_ftz_f32	$s35, $s36, $s35;
	cmp_lt_ftz_b1_f32	$c0, $s32, 0Fc2aeac50;
	cmov_b32	$s35, $c0, 0, $s35;
	cmp_gt_ftz_b1_f32	$c0, $s32, 0F42b17218;
	cmov_b32	$s32, $c0, 0x7f800000, $s35;
	abs_f32	$s35, $s27;
	mul_ftz_f32	$s35, $s35, 0F3e6d3389;
	add_ftz_f32	$s35, $s35, 0F3f800000;
	div_ftz_f32	$s35, 0F3f800000, $s35;
	mul_ftz_f32	$s36, $s35, 0F3faa466f;
	add_ftz_f32	$s36, $s36, 0Fbfe91eea;
	mul_ftz_f32	$s36, $s35, $s36;
	mul_ftz_f32	$s32, $s32, 0F3ecc422a;
	add_ftz_f32	$s36, $s36, 0F3fe40778;
	mul_ftz_f32	$s36, $s35, $s36;
	add_ftz_f32	$s36, $s36, 0Fbeb68f87;
	mul_ftz_f32	$s36, $s35, $s36;
	mul_ftz_f32	$s35, $s35, $s32;
	add_ftz_f32	$s36, $s36, 0F3ea385fa;
	mul_ftz_f32	$s35, $s35, $s36;
	cmp_lt_ftz_b1_f32	$c0, $s27, 0F00000000;
	cmov_b32	$s27, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s27, 0;
	sub_ftz_f32	$s27, 0F3f800000, $s35;
	sub_ftz_f32	$s35, 0F3f800000, $s27;
	cmov_b32	$s27, $c0, $s35, $s27;
	abs_f32	$s35, $s26;
	mul_ftz_f32	$s35, $s35, 0F3e6d3389;
	add_ftz_f32	$s35, $s35, 0F3f800000;
	div_ftz_f32	$s35, 0F3f800000, $s35;
	mul_ftz_f32	$s36, $s35, 0F3faa466f;
	add_ftz_f32	$s36, $s36, 0Fbfe91eea;
	mul_ftz_f32	$s36, $s35, $s36;
	add_ftz_f32	$s36, $s36, 0F3fe40778;
	mul_ftz_f32	$s29, $s35, $s29;
	mul_ftz_f32	$s36, $s35, $s36;
	add_ftz_f32	$s36, $s36, 0Fbeb68f87;
	mul_ftz_f32	$s35, $s35, $s36;
	add_ftz_f32	$s35, $s35, 0F3ea385fa;
	mul_ftz_f32	$s29, $s29, $s35;
	cmp_lt_ftz_b1_f32	$c0, $s26, 0F00000000;
	cmov_b32	$s26, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s26, 0;
	sub_ftz_f32	$s26, 0F3f800000, $s29;
	sub_ftz_f32	$s29, 0F3f800000, $s26;
	cmov_b32	$s26, $c0, $s29, $s26;
	abs_f32	$s29, $s16;
	mul_ftz_f32	$s29, $s29, 0F3e6d3389;
	add_ftz_f32	$s29, $s29, 0F3f800000;
	div_ftz_f32	$s29, 0F3f800000, $s29;
	mul_ftz_f32	$s35, $s29, 0F3faa466f;
	add_ftz_f32	$s35, $s35, 0Fbfe91eea;
	mul_ftz_f32	$s35, $s29, $s35;
	add_ftz_f32	$s35, $s35, 0F3fe40778;
	mul_ftz_f32	$s19, $s29, $s19;
	mul_ftz_f32	$s35, $s29, $s35;
	add_ftz_f32	$s35, $s35, 0Fbeb68f87;
	mul_ftz_f32	$s29, $s29, $s35;
	add_ftz_f32	$s29, $s29, 0F3ea385fa;
	mul_ftz_f32	$s19, $s19, $s29;
	cmp_lt_ftz_b1_f32	$c0, $s16, 0F00000000;
	cmov_b32	$s16, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s16, 0;
	sub_ftz_f32	$s16, 0F3f800000, $s19;
	sub_ftz_f32	$s19, 0F3f800000, $s16;
	cmov_b32	$s16, $c0, $s19, $s16;
	abs_f32	$s19, $s18;
	mul_ftz_f32	$s19, $s19, 0F3e6d3389;
	add_ftz_f32	$s19, $s19, 0F3f800000;
	div_ftz_f32	$s19, 0F3f800000, $s19;
	mul_ftz_f32	$s29, $s19, 0F3faa466f;
	add_ftz_f32	$s29, $s29, 0Fbfe91eea;
	mul_ftz_f32	$s29, $s19, $s29;
	add_ftz_f32	$s29, $s29, 0F3fe40778;
	mul_ftz_f32	$s21, $s19, $s21;
	mul_ftz_f32	$s29, $s19, $s29;
	add_ftz_f32	$s29, $s29, 0Fbeb68f87;
	mul_ftz_f32	$s19, $s19, $s29;
	add_ftz_f32	$s19, $s19, 0F3ea385fa;
	mul_ftz_f32	$s19, $s21, $s19;
	cmp_lt_ftz_b1_f32	$c0, $s18, 0F00000000;
	cmov_b32	$s18, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s18, 0;
	sub_ftz_f32	$s18, 0F3f800000, $s19;
	sub_ftz_f32	$s19, 0F3f800000, $s18;
	cmov_b32	$s18, $c0, $s19, $s18;
	abs_f32	$s19, $s31;
	mul_ftz_f32	$s19, $s19, 0F3e6d3389;
	add_ftz_f32	$s19, $s19, 0F3f800000;
	div_ftz_f32	$s19, 0F3f800000, $s19;
	mul_ftz_f32	$s21, $s19, 0F3faa466f;
	add_ftz_f32	$s21, $s21, 0Fbfe91eea;
	mul_ftz_f32	$s21, $s19, $s21;
	add_ftz_f32	$s21, $s21, 0F3fe40778;
	mul_ftz_f32	$s29, $s19, $s21;
	mul_ftz_f32	$s21, $s19, $s33;
	add_ftz_f32	$s29, $s29, 0Fbeb68f87;
	mul_ftz_f32	$s19, $s19, $s29;
	add_ftz_f32	$s19, $s19, 0F3ea385fa;
	mul_ftz_f32	$s19, $s21, $s19;
	cmp_lt_ftz_b1_f32	$c0, $s31, 0F00000000;
	cmov_b32	$s21, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s21, 0;
	sub_ftz_f32	$s19, 0F3f800000, $s19;
	sub_ftz_f32	$s21, 0F3f800000, $s19;
	cmov_b32	$s19, $c0, $s21, $s19;
	abs_f32	$s21, $s28;
	mul_ftz_f32	$s21, $s21, 0F3e6d3389;
	add_ftz_f32	$s21, $s21, 0F3f800000;
	div_ftz_f32	$s21, 0F3f800000, $s21;
	mul_ftz_f32	$s29, $s21, 0F3faa466f;
	add_ftz_f32	$s29, $s29, 0Fbfe91eea;
	mul_ftz_f32	$s29, $s21, $s29;
	add_ftz_f32	$s29, $s29, 0F3fe40778;
	mul_ftz_f32	$s31, $s21, $s29;
	mul_ftz_f32	$s29, $s21, $s34;
	add_ftz_f32	$s31, $s31, 0Fbeb68f87;
	mul_ftz_f32	$s21, $s21, $s31;
	add_ftz_f32	$s21, $s21, 0F3ea385fa;
	mul_ftz_f32	$s21, $s29, $s21;
	cmp_lt_ftz_b1_f32	$c0, $s28, 0F00000000;
	cmov_b32	$s28, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s28, 0;
	sub_ftz_f32	$s21, 0F3f800000, $s21;
	sub_ftz_f32	$s28, 0F3f800000, $s21;
	cmov_b32	$s21, $c0, $s28, $s21;
	abs_f32	$s28, $s23;
	mul_ftz_f32	$s28, $s28, 0F3e6d3389;
	add_ftz_f32	$s28, $s28, 0F3f800000;
	div_ftz_f32	$s28, 0F3f800000, $s28;
	mul_ftz_f32	$s29, $s28, 0F3faa466f;
	add_ftz_f32	$s29, $s29, 0Fbfe91eea;
	mul_ftz_f32	$s29, $s28, $s29;
	add_ftz_f32	$s29, $s29, 0F3fe40778;
	mul_ftz_f32	$s29, $s28, $s29;
	mul_ftz_f32	$s25, $s28, $s25;
	add_ftz_f32	$s29, $s29, 0Fbeb68f87;
	mul_ftz_f32	$s28, $s28, $s29;
	add_ftz_f32	$s28, $s28, 0F3ea385fa;
	mul_ftz_f32	$s25, $s25, $s28;
	cmp_lt_ftz_b1_f32	$c0, $s23, 0F00000000;
	cmov_b32	$s23, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s23, 0;
	sub_ftz_f32	$s23, 0F3f800000, $s25;
	sub_ftz_f32	$s25, 0F3f800000, $s23;
	cmov_b32	$s23, $c0, $s25, $s23;
	abs_f32	$s25, $s30;
	mul_ftz_f32	$s25, $s25, 0F3e6d3389;
	add_ftz_f32	$s25, $s25, 0F3f800000;
	div_ftz_f32	$s25, 0F3f800000, $s25;
	mul_ftz_f32	$s28, $s25, 0F3faa466f;
	add_ftz_f32	$s28, $s28, 0Fbfe91eea;
	mul_ftz_f32	$s28, $s25, $s28;
	add_ftz_f32	$s28, $s28, 0F3fe40778;
	mul_ftz_f32	$s29, $s25, $s28;
	mul_ftz_f32	$s28, $s25, $s32;
	add_ftz_f32	$s29, $s29, 0Fbeb68f87;
	mul_ftz_f32	$s25, $s25, $s29;
	add_ftz_f32	$s25, $s25, 0F3ea385fa;
	mul_ftz_f32	$s25, $s28, $s25;
	cmp_lt_ftz_b1_f32	$c0, $s30, 0F00000000;
	cmov_b32	$s28, $c0, -1, 0;
	cmp_lt_b1_s32	$c0, $s28, 0;
	sub_ftz_f32	$s25, 0F3f800000, $s25;
	sub_ftz_f32	$s28, 0F3f800000, $s25;
	cmov_b32	$s25, $c0, $s28, $s25;
	neg_f32	$s12, $s12;
	mul_ftz_f32	$s10, $s10, $s12;
	neg_f32	$s5, $s5;
	mul_ftz_f32	$s4, $s4, $s5;
	mov_b32	$s5, $s10;
	and_b32	$s5, $s5, -4096;
	mov_b32	$s28, $s5;
	sub_ftz_f32	$s5, $s10, $s28;
	mul_ftz_f32	$s12, $s5, 0F39a3b295;
	nfma_f32	$s30, $s5, 0F3fb8a000, $s12;
	neg_f32	$s5, $s15;
	mul_ftz_f32	$s5, $s9, $s5;
	mov_b32	$s9, $s4;
	and_b32	$s9, $s9, -4096;
	mov_b32	$s29, $s9;
	sub_ftz_f32	$s9, $s4, $s29;
	mul_ftz_f32	$s12, $s9, 0F39a3b295;
	nfma_f32	$s31, $s9, 0F3fb8a000, $s12;
	neg_f32	$s9, $s22;
	mul_ftz_f32	$s8, $s8, $s9;
	mov_b32	$s9, $s5;
	and_b32	$s9, $s9, -4096;
	sub_ftz_f32	$s12, $s5, $s9;
	mul_ftz_f32	$s15, $s12, 0F39a3b295;
	nfma_f32	$s12, $s12, 0F3fb8a000, $s15;
	nfma_f32	$s15, $s28, 0F39a3b295, $s30;
	nexp2_f32	$s15, $s15;
	mul_ftz_f32	$s22, $s28, 0F3fb8a000;
	nexp2_f32	$s22, $s22;
	mul_ftz_f32	$s15, $s15, $s22;
	nfma_f32	$s22, $s29, 0F39a3b295, $s31;
	nexp2_f32	$s22, $s22;
	mul_ftz_f32	$s28, $s29, 0F3fb8a000;
	nexp2_f32	$s28, $s28;
	mul_ftz_f32	$s28, $s22, $s28;
	mov_b32	$s22, $s8;
	and_b32	$s22, $s22, -4096;
	sub_ftz_f32	$s29, $s8, $s22;
	mul_ftz_f32	$s30, $s29, 0F39a3b295;
	nfma_f32	$s29, $s29, 0F3fb8a000, $s30;
	nfma_f32	$s29, $s22, 0F39a3b295, $s29;
	nexp2_f32	$s29, $s29;
	mul_ftz_f32	$s22, $s22, 0F3fb8a000;
	nexp2_f32	$s22, $s22;
	mul_ftz_f32	$s22, $s29, $s22;
	cmp_lt_ftz_b1_f32	$c0, $s4, 0Fc2aeac50;
	cmov_b32	$s28, $c0, 0, $s28;
	cmp_lt_ftz_b1_f32	$c0, $s10, 0Fc2aeac50;
	cmov_b32	$s15, $c0, 0, $s15;
	nfma_f32	$s12, $s9, 0F39a3b295, $s12;
	nexp2_f32	$s12, $s12;
	mul_ftz_f32	$s9, $s9, 0F3fb8a000;
	nexp2_f32	$s9, $s9;
	mul_ftz_f32	$s9, $s12, $s9;
	cmp_lt_ftz_b1_f32	$c0, $s5, 0Fc2aeac50;
	cmov_b32	$s9, $c0, 0, $s9;
	cmp_gt_ftz_b1_f32	$c0, $s5, 0F42b17218;
	cmov_b32	$s5, $c0, 0x7f800000, $s9;
	cmp_gt_ftz_b1_f32	$c0, $s10, 0F42b17218;
	cmov_b32	$s9, $c0, 0x7f800000, $s15;
	cmp_gt_ftz_b1_f32	$c0, $s4, 0F42b17218;
	cmov_b32	$s10, $c0, 0x7f800000, $s28;
	cmp_lt_ftz_b1_f32	$c0, $s8, 0Fc2aeac50;
	cmov_b32	$s4, $c0, 0, $s22;
	cmp_gt_ftz_b1_f32	$c0, $s8, 0F42b17218;
	cmov_b32	$s4, $c0, 0x7f800000, $s4;
	ld_kernarg_align(8)_width(all)_u64	$d2, [%put];
	ld_kernarg_align(8)_width(all)_u64	$d1, [%call];
	add_u64	$d1, $d1, $d0;
	add_u64	$d0, $d2, $d0;
	mul_ftz_f32	$s4, $s3, $s4;
	mul_ftz_f32	$s8, $s0, $s10;
	mul_ftz_f32	$s9, $s1, $s9;
	mul_ftz_f32	$s5, $s2, $s5;
	mul_ftz_f32	$s10, $s2, $s13;
	mul_ftz_f32	$s12, $s5, $s25;
	mul_ftz_f32	$s11, $s1, $s11;
	mul_ftz_f32	$s13, $s9, $s23;
	mul_ftz_f32	$s7, $s0, $s7;
	mul_ftz_f32	$s6, $s8, $s6;
	sub_ftz_f32	$s6, $s7, $s6;
	sub_ftz_f32	$s7, $s11, $s13;
	sub_ftz_f32	$s10, $s10, $s12;
	mul_ftz_f32	$s11, $s3, $s21;
	mul_ftz_f32	$s12, $s4, $s19;
	sub_ftz_f32	$s11, $s11, $s12;
	mul_ftz_f32	$s1, $s1, $s18;
	mul_ftz_f32	$s9, $s9, $s17;
	mul_ftz_f32	$s0, $s0, $s16;
	mul_ftz_f32	$s8, $s8, $s14;
	st_v4_global_align(16)_f32	($s6, $s7, $s10, $s11), [$d1];
	sub_ftz_f32	$s0, $s8, $s0;
	sub_ftz_f32	$s1, $s9, $s1;
	mul_ftz_f32	$s2, $s2, $s26;
	mul_ftz_f32	$s5, $s5, $s27;
	sub_ftz_f32	$s2, $s5, $s2;
	mul_ftz_f32	$s3, $s3, $s24;
	mul_ftz_f32	$s4, $s4, $s20;
	sub_ftz_f32	$s3, $s4, $s3;
	st_v4_global_align(16)_f32	($s0, $s1, $s2, $s3), [$d0];
	ret;
};

prog kernel &__OpenCL_blackScholes_scalar_kernel(
	kernarg_u64 %__global_offset_0,
	kernarg_u64 %__global_offset_1,
	kernarg_u64 %__global_offset_2,
	kernarg_u64 %__printf_buffer,
	kernarg_u64 %__vqueue_pointer,
	kernarg_u64 %__aqlwrap_pointer,
	kernarg_u64 %randArray,
	kernarg_u64 %width,
	kernarg_u64 %call,
	kernarg_u64 %put)
{
	pragma "AMD RTI", "ARGSTART:__OpenCL_blackScholes_scalar_kernel";
	pragma "AMD RTI", "version:3:1:104";
	pragma "AMD RTI", "device:generic";
	pragma "AMD RTI", "uniqueid:1027";
	pragma "AMD RTI", "memory:private:0";
	pragma "AMD RTI", "memory:region:0";
	pragma "AMD RTI", "memory:local:0";
	pragma "AMD RTI", "value:__global_offset_0:u64:1:1:0";
	pragma "AMD RTI", "value:__global_offset_1:u64:1:1:16";
	pragma "AMD RTI", "value:__global_offset_2:u64:1:1:32";
	pragma "AMD RTI", "pointer:__printf_buffer:u8:1:1:48:uav:7:1:RW:0:0:0";
	pragma "AMD RTI", "value:__vqueue_pointer:u64:1:1:64";
	pragma "AMD RTI", "value:__aqlwrap_pointer:u64:1:1:80";
	pragma "AMD RTI", "pointer:randArray:float:1:1:96:uav:7:4:RW:0:0:0";
	pragma "AMD RTI", "constarg:6:randArray";
	pragma "AMD RTI", "value:width:u32:1:1:112";
	pragma "AMD RTI", "pointer:call:float:1:1:128:uav:7:4:RW:0:0:0";
	pragma "AMD RTI", "pointer:put:float:1:1:144:uav:7:4:RW:0:0:0";
	pragma "AMD RTI", "function:1:0";
	pragma "AMD RTI", "memory:64bitABI";
	pragma "AMD RTI", "privateid:8";
	pragma "AMD RTI", "enqueue_kernel:0";
	pragma "AMD RTI", "kernel_index:1";
	pragma "AMD RTI", "reflection:0:size_t";
	pragma "AMD RTI", "reflection:1:size_t";
	pragma "AMD RTI", "reflection:2:size_t";
	pragma "AMD RTI", "reflection:3:size_t";
	pragma "AMD RTI", "reflection:4:size_t";
	pragma "AMD RTI", "reflection:5:size_t";
	pragma "AMD RTI", "reflection:6:float*";
	pragma "AMD RTI", "reflection:7:int";
	pragma "AMD RTI", "reflection:8:float*";
	pragma "AMD RTI", "reflection:9:float*";
	pragma "AMD RTI", "ARGEND:__OpenCL_blackScholes_scalar_kernel";

@__OpenCL_blackScholes_scalar_kernel_entry:
	// BB#0:
	workitemabsid_u32	$s0, 0;
	cvt_u64_u32	$d0, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d1, [%__global_offset_0];
	add_u64	$d0, $d0, $d1;
	workitemabsid_u32	$s0, 1;
	cvt_u64_u32	$d1, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d2, [%__global_offset_1];
	add_u64	$d1, $d1, $d2;
	ld_kernarg_align(4)_width(all)_u32	$s0, [%width];
	cvt_s64_s32	$d2, $s0;
	mad_u64	$d0, $d1, $d2, $d0;
	shl_u64	$d0, $d0, 2;
	ld_kernarg_align(8)_width(all)_u64	$d1, [%randArray];
	add_u64	$d1, $d1, $d0;
	ld_global_align(4)_f32	$s0, [$d1];
	sub_ftz_f32	$s4, 0F3f800000, $s0;
	mul_ftz_f32	$s1, $s4, 0F41200000;
	add_ftz_f32	$s2, $s0, $s1;
	mul_ftz_f32	$s5, $s0, 0F3c23d70a;
	mul_ftz_f32	$s1, $s4, 0F3d4ccccd;
	add_ftz_f32	$s3, $s5, $s1;
	neg_f32	$s1, $s3;
	mul_ftz_f32	$s1, $s2, $s1;
	mov_b32	$s6, $s1;
	and_b32	$s6, $s6, -4096;
	sub_ftz_f32	$s7, $s1, $s6;
	mul_ftz_f32	$s8, $s7, 0F39a3b295;
	nfma_f32	$s7, $s7, 0F3fb8a000, $s8;
	nfma_f32	$s7, $s6, 0F39a3b295, $s7;
	nexp2_f32	$s7, $s7;
	mul_ftz_f32	$s6, $s6, 0F3fb8a000;
	nexp2_f32	$s6, $s6;
	mul_ftz_f32	$s6, $s7, $s6;
	cmp_lt_ftz_b1_f32	$c0, $s1, 0Fc2aeac50;
	cmov_b32	$s6, $c0, 0, $s6;
	mul_ftz_f32	$s0, $s0, 0F41200000;
	mul_ftz_f32	$s7, $s4, 0F42c80000;
	add_ftz_f32	$s0, $s0, $s7;
	div_ftz_f32	$s7, $s0, $s0;
	nlog2_f32	$s7, $s7;
	mov_b32	$s8, $s7;
	and_b32	$s8, $s8, -4096;
	sub_ftz_f32	$s9, $s7, $s8;
	mul_ftz_f32	$s10, $s9, 0F3805fdf4;
	nfma_f32	$s10, $s8, 0F3805fdf4, $s10;
	nfma_f32	$s9, $s9, 0F3f317000, $s10;
	nfma_f32	$s8, $s8, 0F3f317000, $s9;
	class_b1_f32	$c0, $s7, 0x207;
	cvt_u32_b1	$s9, $c0;
	cmp_ne_b1_s32	$c0, $s9, 0;
	cmov_b32	$s7, $c0, $s7, $s8;
	cmp_gt_ftz_b1_f32	$c0, $s1, 0F42b17218;
	cmov_b32	$s1, $c0, 0x7f800000, $s6;
	mul_ftz_f32	$s4, $s4, 0F3dcccccd;
	add_ftz_f32	$s4, $s5, $s4;
	nsqrt_f32	$s5, $s2;
	mul_ftz_f32	$s5, $s4, $s5;
	mul_ftz_f32	$s4, $s4, $s4;
	mul_ftz_f32	$s4, $s4, 0F3f000000;
	add_ftz_f32	$s3, $s3, $s4;
	mul_ftz_f32	$s2, $s3, $s2;
	add_ftz_f32	$s2, $s2, $s7;
	div_ftz_f32	$s2, $s2, $s5;
	neg_f32	$s6, $s2;
	mul_ftz_f32	$s3, $s2, $s6;
	mul_ftz_f32	$s4, $s3, 0F3f000000;
	mov_b32	$s3, $s4;
	and_b32	$s3, $s3, -4096;
	sub_ftz_f32	$s7, $s4, $s3;
	mul_ftz_f32	$s8, $s7, 0F39a3b295;
	nfma_f32	$s7, $s7, 0F3fb8a000, $s8;
	nfma_f32	$s7, $s3, 0F39a3b295, $s7;
	nexp2_f32	$s7, $s7;
	mul_ftz_f32	$s3, $s3, 0F3fb8a000;
	nexp2_f32	$s3, $s3;
	mul_ftz_f32	$s3, $s7, $s3;
	mul_ftz_f32	$s3, $s3, 0F3ecc422a;
	cmp_lt_ftz_b1_f32	$c0, $s4, 0Fc2aeac50;
	cmov_b32	$s8, $c0, 0, $s3;
	sub_ftz_f32	$s3, $s2, $s5;
	neg_f32	$s9, $s3;
	mul_ftz_f32	$s5, $s3, $s9;
	mul_ftz_f32	$s5, $s5, 0F3f000000;
	mov_b32	$s7, $s5;
	and_b32	$s7, $s7, -4096;
	sub_ftz_f32	$s10, $s5, $s7;
	mul_ftz_f32	$s11, $s10, 0F39a3b295;
	nfma_f32	$s10, $s10, 0F3fb8a000, $s11;
	nfma_f32	$s10, $s7, 0F39a3b295, $s10;
	nexp2_f32	$s10, $s10;
	mul_ftz_f32	$s7, $s7, 0F3fb8a000;
	nexp2_f32	$s7, $s7;
	mul_ftz_f32	$s7, $s10, $s7;
	mul_ftz_f32	$s7, $s7, 0F3ecc422a;
	cmp_lt_ftz_b1_f32	$c0, $s5, 0Fc2aeac50;
	cmov_b32	$s7, $c0, 0, $s7;
	cmp_gt_ftz_b1_f32	$c0, $s5, 0F42b17218;
	cmov_b32	$s7, $c0, 0x7f800000, $s7;
	cmp_gt_ftz_b1_f32	$c0, $s4, 0F42b17218;
	cmov_b32	$s5, $c0, 0x7f800000, $s8;
	abs_f32	$s4, $s9;
	mul_ftz_f32	$s4, $s4, 0F3e6d3389;
	add_ftz_f32	$s4, $s4, 0F3f800000;
	div_ftz_f32	$s4, 0F3f800000, $s4;
	mul_ftz_f32	$s8, $s4, 0F3faa466f;
	add_ftz_f32	$s8, $s8, 0Fbfe91eea;
	mul_ftz_f32	$s8, $s4, $s8;
	add_ftz_f32	$s9, $s8, 0F3fe40778;
	mul_ftz_f32	$s8, $s4, $s7;
	mul_ftz_f32	$s9, $s4, $s9;
	add_ftz_f32	$s9, $s9, 0Fbeb68f87;
	mul_ftz_f32	$s4, $s4, $s9;
	add_ftz_f32	$s4, $s4, 0F3ea385fa;
	mul_ftz_f32	$s4, $s8, $s4;
	sub_ftz_f32	$s4, 0F3f800000, $s4;
	sub_ftz_f32	$s8, 0F3f800000, $s4;
	cmp_gt_ftz_b1_f32	$c0, $s3, 0F80000000;
	cmov_b32	$s4, $c0, $s8, $s4;
	abs_f32	$s6, $s6;
	mul_ftz_f32	$s6, $s6, 0F3e6d3389;
	add_ftz_f32	$s6, $s6, 0F3f800000;
	div_ftz_f32	$s6, 0F3f800000, $s6;
	mul_ftz_f32	$s8, $s6, 0F3faa466f;
	add_ftz_f32	$s8, $s8, 0Fbfe91eea;
	mul_ftz_f32	$s8, $s6, $s8;
	add_ftz_f32	$s9, $s8, 0F3fe40778;
	mul_ftz_f32	$s8, $s6, $s5;
	mul_ftz_f32	$s9, $s6, $s9;
	add_ftz_f32	$s9, $s9, 0Fbeb68f87;
	mul_ftz_f32	$s6, $s6, $s9;
	add_ftz_f32	$s6, $s6, 0F3ea385fa;
	mul_ftz_f32	$s6, $s8, $s6;
	sub_ftz_f32	$s6, 0F3f800000, $s6;
	sub_ftz_f32	$s8, 0F3f800000, $s6;
	cmp_gt_ftz_b1_f32	$c0, $s2, 0F80000000;
	cmov_b32	$s6, $c0, $s8, $s6;
	abs_f32	$s8, $s3;
	mul_ftz_f32	$s8, $s8, 0F3e6d3389;
	add_ftz_f32	$s8, $s8, 0F3f800000;
	div_ftz_f32	$s8, 0F3f800000, $s8;
	mul_ftz_f32	$s9, $s8, 0F3faa466f;
	add_ftz_f32	$s9, $s9, 0Fbfe91eea;
	mul_ftz_f32	$s9, $s8, $s9;
	add_ftz_f32	$s9, $s9, 0F3fe40778;
	mul_ftz_f32	$s9, $s8, $s9;
	mul_ftz_f32	$s7, $s8, $s7;
	add_ftz_f32	$s9, $s9, 0Fbeb68f87;
	mul_ftz_f32	$s8, $s8, $s9;
	add_ftz_f32	$s8, $s8, 0F3ea385fa;
	mul_ftz_f32	$s7, $s7, $s8;
	sub_ftz_f32	$s7, 0F3f800000, $s7;
	sub_ftz_f32	$s8, 0F3f800000, $s7;
	cmp_lt_ftz_b1_f32	$c0, $s3, 0F00000000;
	cmov_b32	$s3, $c0, $s8, $s7;
	abs_f32	$s7, $s2;
	mul_ftz_f32	$s7, $s7, 0F3e6d3389;
	add_ftz_f32	$s7, $s7, 0F3f800000;
	div_ftz_f32	$s7, 0F3f800000, $s7;
	mul_ftz_f32	$s8, $s7, 0F3faa466f;
	add_ftz_f32	$s8, $s8, 0Fbfe91eea;
	mul_ftz_f32	$s8, $s7, $s8;
	add_ftz_f32	$s8, $s8, 0F3fe40778;
	mul_ftz_f32	$s8, $s7, $s8;
	mul_ftz_f32	$s5, $s7, $s5;
	add_ftz_f32	$s8, $s8, 0Fbeb68f87;
	mul_ftz_f32	$s7, $s7, $s8;
	add_ftz_f32	$s7, $s7, 0F3ea385fa;
	mul_ftz_f32	$s5, $s5, $s7;
	sub_ftz_f32	$s5, 0F3f800000, $s5;
	sub_ftz_f32	$s7, 0F3f800000, $s5;
	cmp_lt_ftz_b1_f32	$c0, $s2, 0F00000000;
	cmov_b32	$s2, $c0, $s7, $s5;
	ld_kernarg_align(8)_width(all)_u64	$d2, [%call];
	ld_kernarg_align(8)_width(all)_u64	$d1, [%put];
	add_u64	$d1, $d1, $d0;
	add_u64	$d0, $d2, $d0;
	mul_ftz_f32	$s1, $s0, $s1;
	mul_ftz_f32	$s2, $s0, $s2;
	mul_ftz_f32	$s3, $s1, $s3;
	sub_ftz_f32	$s2, $s2, $s3;
	st_global_align(4)_f32	$s2, [$d0];
	mul_ftz_f32	$s0, $s0, $s6;
	mul_ftz_f32	$s1, $s1, $s4;
	sub_ftz_f32	$s0, $s1, $s0;
	st_global_align(4)_f32	$s0, [$d1];
	ret;
};
