
prog kernel &__OpenCL_bitonicSort_kernel(
	kernarg_u64 %theArray,
	kernarg_u32 %stage,
	kernarg_u32 %passOfStage,
	kernarg_u32 %direction)
{

@__OpenCL_bitonicSort_kernel_entry:
	// BB#0:
	workitemabsid_u32	$s0, 0;
	cvt_u64_u32	$d0, $s0;
	//ld_kernarg_align(8)_width(all)_u64	$d1, [%__global_offset_0];
	mov_b64	$d1, 0;	
	add_u64	$d0, $d0, $d1;
	cvt_u32_u64	$s1, $d0;
	ld_kernarg_align(4)_width(all)_u32	$s2, [%stage];
	shl_u32	$s0, 1, $s2;
	and_b32	$s0, $s1, $s0;
	ld_kernarg_align(4)_width(all)_u32	$s3, [%direction];
	sub_u32	$s4, 1, $s3;
	cmp_eq_b1_s32	$c0, $s0, 0;
	cmov_b32	$s0, $c0, $s3, $s4;
	ld_kernarg_align(4)_width(all)_u32	$s3, [%passOfStage];
	sub_u32	$s4, $s2, $s3;
	shl_u32	$s2, 1, $s4;
	mov_b32 $s5, 0xFFFFFFFF;
	add_s32	$s3, $s2, $s5;
	and_b32	$s3, $s1, $s3;
	shr_u32	$s1, $s1, $s4;
	mul_u32	$s1, $s2, $s1;
	shl_u32	$s1, $s1, 1;
	ld_kernarg_align(8)_width(all)_u64	$d1, [%theArray];
	add_u32	$s3, $s1, $s3;
	cvt_u64_u32	$d0, $s3;
	shl_u64	$d0, $d0, 2;
	add_u64	$d0, $d1, $d0;
	ld_global_align(4)_u32	$s1, [$d0];
	add_u32	$s2, $s3, $s2;
	cvt_u64_u32	$d2, $s2;
	shl_u64	$d2, $d2, 2;
	add_u64	$d1, $d1, $d2;
	ld_global_align(4)_u32	$s3, [$d1];
	max_u32	$s2, $s1, $s3;
	min_u32	$s1, $s1, $s3;
	cmp_eq_b1_s32	$c0, $s0, 0;
	cmov_b32	$s0, $c0, $s1, $s2;
	cmov_b32	$s1, $c0, $s2, $s1;
	st_global_align(4)_u32	$s1, [$d0];
	st_global_align(4)_u32	$s0, [$d1];
	exit;
};
